{"version":3,"sources":["webpack:///ClientApp/app/shop/productList.component.html","webpack:///ClientApp/app/shop/productList.component.ts","webpack:///ClientApp/app/checkout/checkout.component.html","webpack:///ClientApp/app/checkout/checkout.component.ts","webpack:///ClientApp/environments/environment.ts","webpack:///ClientApp/app/app.component.ts","webpack:///ClientApp/app/app.component.html","webpack:///ClientApp/app/app.module.ts","webpack:///ClientApp/app/shared/order.ts","webpack:///ClientApp/main.ts","webpack:///ClientApp/app/shop/shop.component.ts","webpack:///ClientApp/app/shop/shop.component.html","webpack:///ClientApp/app/login/login.component.ts","webpack:///ClientApp/app/login/login.component.html","webpack:///ClientApp/app/shared/dataService.ts","webpack:///ClientApp/app/shop/cart.component.html","webpack:///ClientApp/app/shop/cart.component.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ProductList","data","products","loadProducts","subscribe","success","product","addToOrder","Checkout","router","errorMessage","onCheckout","environment","production","AppComponent","title","routes","path","component","AppModule","forRoot","useHash","enableTracing","Order","orderDate","Date","items","Array","i","unitPrice","quantity","OrderItem","bootstrapModule","err","console","error","Shop","Login","DataService","http","token","order","length","tokenExpiration","get","pipe","item","find","_","productId","id","productArtist","artist","productCategory","category","productArtId","artId","productTitle","productSize","size","price","push","Cart","loginRequired","navigate","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["<div class=\"row\">\r\n    <div class=\"product-info col-md-4 well well-sm\" *ngFor=\"let p of products\">\r\n        <div class=\"card bg-light p-1 m-1\">\r\n            <img src=\"/img/{{ p.artId }}.jpg\" class=\"img-fluid\" [alt]=\"p.title\" />\r\n            <div class=\"product-name\">{{ p.category }} - {{ p.size }}</div>\r\n            <ul class=\"product-props\">\r\n                <li><strong>Price</strong>: {{ p.price | currency:\"USD\":true }}</li>\r\n                <li><strong>Artist</strong>: {{ p.artist }}</li>\r\n                <li><strong>Title</strong>: {{ p.title }}</li>\r\n                <li><strong>Description</strong>: {{ p.artDescription }}</li>\r\n            </ul>\r\n            <button id=\"buyButton\" class=\"btn btn-success btn-sm pull-right\" (click)=\"addProduct(p)\">Buy</button>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from \"@angular/core\"\r\nimport { DataService } from \"../shared/dataService\"\r\nimport { Product } from \"../shared/product\";\r\n\r\n@Component({\r\n    selector: \"product-list\",\r\n    templateUrl: \"productList.component.html\",\r\n    styleUrls: [ \"productList.component.css\" ]\r\n})\r\n\r\nexport class ProductList implements OnInit {\r\n\r\n    constructor(private data: DataService) {}\r\n\r\n    public products: Product[] = [];\r\n\r\n    ngOnInit(): void {\r\n        this.data.loadProducts()\r\n            .subscribe(success => {\r\n                if (success) {\r\n                    this.products = this.data.products;\r\n                }\r\n            });\r\n    }\r\n\r\n    addProduct(product: Product) {\r\n        this.data.addToOrder(product);\r\n    }\r\n}","<div class=\"row\">\r\n  <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{ errorMessage }}</div>\r\n  <h3>Confirm Order</h3>\r\n  <table class=\"table table-bordered table-hover\">\r\n    <tr *ngFor=\"let o of data.order.items\">\r\n      <td><img src=\"/img/{{ o.productArtId }}.jpg\" alt=\"o.productTitle\" class=\"img-thumbnail checkout-thumb\" /></td>\r\n      <td>{{ o.productCategory }}({{ o.productSize }}) - {{ o.productArtist }}: {{ o.productTitle }}</td>\r\n      <td>{{ o.quantity }}</td>\r\n      <td>{{ o.unitPrice|currency:'USD':\"symbol\" }}</td>\r\n      <td>{{ (o.unitPrice * o.quantity)|currency:'USD':\"symbol\" }}</td>\r\n    </tr>\r\n  </table>\r\n  <div class=\"col-md-4 col-md-offset-8 text-right\">\r\n    <table class=\"table table-condensed\">\r\n      <tr>\r\n        <td class=\"text-right\">Subtotal</td>\r\n        <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':\"symbol\" }}</td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"text-right\">Shipping</td>\r\n        <td class=\"text-right\">$ 0.00</td>\r\n      </tr>\r\n      <tr>\r\n        <td class=\"text-right\">Total:</td>\r\n        <td class=\"text-right\">{{ data.order.subtotal|currency:'USD':\"symbol\" }}</td>\r\n      </tr>\r\n    </table>\r\n    <button class=\"btn btn-success\" (click)=\"onCheckout()\">Complete Purchase</button>\r\n    <a routerLink=\"/\" class=\"btn btn-info\">Cancel</a>\r\n  </div>\r\n\r\n</div>","import { Component } from \"@angular/core\";\r\nimport { DataService } from '../shared/dataService';\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"checkout\",\r\n  templateUrl: \"checkout.component.html\",\r\n  styleUrls: ['checkout.component.css']\r\n})\r\nexport class Checkout {\r\n\r\n  constructor(public data: DataService, public router: Router) {\r\n  }\r\n  \r\n  errorMessage: string = \"\";\r\n\r\n  onCheckout() {\r\n    //this.data.checkout()\r\n    //  .subscribe(success => {\r\n    //    if (success) {\r\n    //      this.router.navigate([\"/\"]);\r\n    //    }\r\n    //  }, err => this.errorMessage = \"Failed to save order\");\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'the-shop',\n    templateUrl: \"./app.component.html\",\n    styles: []\n})\nexport class AppComponent {\n    title = 'Product List';\n}\n","<router-outlet></router-outlet>","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { DataService } from './shared/dataService';\r\nimport { ProductList } from \"./shop/productList.component\";\r\nimport { Cart } from \"./shop/cart.component\";\r\nimport { Shop } from \"./shop/shop.component\";\r\nimport { Checkout } from \"./checkout/checkout.component\";\r\nimport { Login } from \"./login/login.component\";\r\n\r\nimport { RouterModule } from \"@angular/router\";\r\n\r\nlet routes = [\r\n    { path: \"\", component: Shop },\r\n    { path: \"checkout\", component: Checkout },\r\n    { path: \"login\", component: Login }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n        AppComponent,\r\n        ProductList,\r\n        Cart,\r\n        Shop,\r\n        Checkout,\r\n        Login\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpClientModule,\r\n      RouterModule.forRoot(routes, {\r\n          useHash: true,\r\n          enableTracing: false  // for Debugging of the Routes\r\n      })\r\n  ],\r\n    providers: [\r\n        DataService\r\n    ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import * as _ from \"lodash\";\r\n\r\nexport class Order {\r\n    orderId: number | undefined;\r\n    orderDate: Date = new Date();\r\n    orderNumber: string | undefined;\r\n    items: Array<OrderItem> = new Array<OrderItem>();\r\n\r\n    get subtotal(): number {\r\n        return _.sum(_.map(this.items, i => i.unitPrice * i.quantity));\r\n    };\r\n}\r\n\r\nexport class OrderItem {\r\n    id: number | undefined;\r\n    quantity: number = 0;\r\n    unitPrice: number = 0;\r\n    productId: number | undefined;\r\n    productCategory: string | undefined;\r\n    productSize: string | undefined;\r\n    productTitle: string | undefined;\r\n    productArtist: string | undefined;\r\n    productArtId: string | undefined;\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"the-shop\",\r\n    templateUrl: \"shop.component.html\"\r\n})\r\n\r\nexport class Shop { }","<div class=\"row\">\r\n    <div class=\"col-md-9\">\r\n        <product-list></product-list>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n        <div class=\"card bg-light p-2\">\r\n            <the-cart></the-cart>\r\n        </div>\r\n    </div>\r\n</div>","import { Component } from \"@angular/core\";\r\n\r\n@Component({\r\n    selector: \"login\",\r\n    templateUrl: \"login.component.html\"\r\n})\r\n\r\nexport class Login {}","<!--<div class=\"row\">\r\n  <div class=\"col-md-4 offset-md-4\">\r\n    <div *ngIf=\"errorMessage\" class=\"alert alert-warning\">{{ errorMessage }}</div>\r\n    <form (submit)=\"onLogin()\" #theForm=\"ngForm\" novalidate>\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Username</label>\r\n        <input type=\"text\" class=\"form-control\" name=\"username\" [(ngModel)]=\"creds.username\" #username=\"ngModel\" required />\r\n        <div class=\"text-danger\" *ngIf=\"username.touched && username.invalid && username.errors.required\" >Username is required!</div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input type=\"password\" class=\"form-control\" name=\"password\" [(ngModel)]=\"creds.password\" required #password=\"ngModel\" />\r\n        <div class=\"text-danger\" *ngIf=\"password.touched && password.invalid && password.errors.required\">Password is required!</div>\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <input type=\"submit\" class=\"btn btn-success\" value=\"Login\" [disabled]=\"theForm.invalid\" />\r\n        <a routerLink=\"/\" class=\"btn btn-default\">Cancel</a>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>-->\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-4 offset-md-4\">\r\n        <form>\r\n            <div class=\"form-group\">\r\n                <label for=\"username\">Username</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"username\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label for=\"password\">Password</label>\r\n                <input type=\"password\" class=\"form-control\" name=\"password\" />\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <input type=\"submit\" class=\"btn btn-success\" value=\"Login\"/>\r\n                <a href=\"#\" class=\"btn btn-default\">Cancel</a>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\nimport { Product } from \"../shared/product\";\r\nimport { Order, OrderItem } from \"./order\";\r\n\r\n@Injectable()\r\nexport class DataService {\r\n\r\n    constructor(private http: HttpClient) {\r\n\r\n    }\r\n\r\n    private token: string = \"\";\r\n    private tokenExpiration: Date | undefined;\r\n\r\n    public order: Order = new Order();\r\n\r\n    public products: Product[] = [];\r\n\r\n    public get loginRequired(): boolean {\r\n        return this.token.length == 0 || this.tokenExpiration! > new Date();\r\n    }\r\n\r\n    public loadProducts(): Observable<boolean> {\r\n        return this.http.get(\"/api/products\")\r\n            .pipe(\r\n                map((data: any) => {\r\n                    this.products = data;\r\n                    return true;\r\n                }));\r\n    }\r\n\r\n    public addToOrder(product: Product) {\r\n        let item: OrderItem | undefined = this.order.items.find(_ => _.productId == product.id);\r\n\r\n        if (item) {\r\n            item.quantity++;\r\n        } else {\r\n            item = new OrderItem();\r\n            item.productId = product.id;\r\n            item.productArtist = product.artist;\r\n            item.productCategory = product.category;\r\n            item.productArtId = product.artId;\r\n            item.productTitle = product.title;\r\n            item.productSize = product.size;\r\n            item.unitPrice = product.price;\r\n            item.quantity = 1;\r\n\r\n            this.order.items.push(item);\r\n        }\r\n    }\r\n}","<h3>Shopping Cart</h3>\r\n<div>#/Items: {{ data.order.items.length }}</div>\r\n<div>Subtotal: {{ data.order.subtotal | currency:\"USD\":true }}</div>\r\n<table class=\"table table-condensed table-hover\">\r\n    <thead>\r\n        <tr>\r\n            <td>Product</td>\r\n            <td>#</td>\r\n            <td>$</td>\r\n            <td>Total</td>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr *ngFor=\"let o of data.order.items\">\r\n            <td>{{ o.productCategory }} - {{ o.productTitle }}</td>\r\n            <td>{{ o.quantity }}</td>\r\n            <td>{{ o.unitPrice | currency:\"USD\":true }}</td>\r\n            <td>{{ (o.unitPrice * o.quantity) | currency:\"USD\":true }}</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n<button class=\"btn btn-success\" *ngIf=\"data.order.items.length> 0\" (click)=\"onCheckout()\">Checkout</button>","import { Component } from \"@angular/core\"\r\nimport { DataService } from \"../shared/dataService\"\r\nimport { Router } from \"@angular/router\"\r\n\r\n@Component({\r\n    selector: \"the-cart\",\r\n    templateUrl: \"cart.component.html\",\r\n    styleUrls: []\r\n})\r\n\r\nexport class Cart {\r\n    constructor(public data: DataService, private router: Router) { }\r\n\r\n    public onCheckout() {\r\n        if (this.data.loginRequired) {\r\n            this.router.navigate([\"login\"]);\r\n        } else {\r\n            this.router.navigate([\"checkout\"]);\r\n        }\r\n    }\r\n}","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}